spring:
  kafka:
    consumer:
      enable-auto-commit: true
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: latest
      max-poll-records: 100
    producer:
      compression-type: gzip
    ssl:
      trust-store-location: file:///etc/prs/certs/kafka/kafka.client.truststore.jks
      trust-store-password: "***"
      key-store-location: file:///etc/prs/certs/kafka/kafka.client.keystore.jks
      key-store-password: "***"
      key-password: "***"
    bootstrap-servers: ${kafka_bootstrap_servers}
    security:
      protocol: SSL
    properties:
      ssl:
        endpoint:
          identification:
            algorithm: ''
      max:
        poll:
          interval:
            ms: 600000
      session:
        timeout:
          ms: 10000
    listener:
      type: batch
      idle-event-interval: 30000
      concurrency: 5



#临时处理--SASL_PLAINTEXT加密
#  spring.kafka.bootstrap-servers = ***
#  spring.kafka.consumer.properties.group.id = test1
#  spring.kafka.consumer.enable-auto-commit = false
#  spring.kafka.consumer.auto.commit.interval.ms = 1000
#  spring.kafka.consumer.auto-offset-reset = earliest
#  spring.kafka.consumer.properties.session.timeout.ms = 120000
#  spring.kafka.consumer.properties.request.timeout.ms = 180000
#  spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
#  spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
#  spring.kafka.listener.missing-topics-fatal = false
#  spring.kafka.properties.sasl.mechanism = PLAIN
#  spring.kafka.properties.security.protocol = SASL_PLAINTEXT
#  spring.kafka.properties.sasl.jaas.config = org.apache.kafka.common.security.plain.PlainLoginModule required username="***" password="***";
